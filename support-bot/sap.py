import telebot
from telebot import  types
import sqlite3
import random
act_category = ''
act_id=0
captcha_list = ["—è–±–ª–æ–∫–æ", "–∞—Ä–±—É–∑", "–±–∞–Ω–∞–Ω", "–≤–∏–Ω–æ–≥—Ä–∞–¥", "–º–æ—Ä–∫–æ–≤—å", "–∫—É–∫—É—Ä—É–∑–∞"] # —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤—Å–µ—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∫–∞–ø—á–∏, –º–æ–∂–µ—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å —á—Ç–æ —É–≥–æ–¥–Ω–æ
# ================
cp1 = "üçè"  # —Å–º–∞–π–ª–∏–∫–∏ –≤ –∫–∞–ø—á–µ.
cp2 = "üçâ"
cp3 = "üçå"
cp4 = "üçá"
cp5 = "ü•ï"
cp6 = "üåΩ"
# ================
completecaptcga = [999]

bot_token = ""
admin = 
category = ['üí≥ –ü—Ä–æ–±–ª–µ–º–∞ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è', '‚ùì –í–æ–ø—Ä–æ—Å –ø–æ —Ä–∞–±–æ—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–º—ã','üíõ –°–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤–æ', 'üíö –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è']
rules = '–ü–∏—à–∏—Ç–µ —É–≤–∞–∂–∏—Ç–µ–ª—å–Ω–æ, –ø—Ä–∏–¥–µ—Ä–∂–∏–≤–∞—è—Å—å –Ω–æ—Ä–º –º–æ—Ä–∞–ª–∏. –í –ø—Ä–æ—Ç–∏–≤–Ω–æ–º —Å–ª—É—á–∞–µ –≤—ã –º–æ–∂–µ—Ç–µ –±—ã—Ç—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–Ω—ã–º'
bot=telebot.TeleBot(bot_token)

connect = sqlite3.connect('users.db')
cursor= connect.cursor()
cursor.execute("""CREATE TABLE IF NOT EXISTS users(
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    tg_id INTEGER,
    activate INTEGER,
    try INTEGER,
    block INTEGER,
    support INTEGER,
    supportText TEXT
)""")

connect.commit()

@bot.message_handler()
def start(message):
    connect = sqlite3.connect('users.db')
    cursor= connect.cursor()
    people_id=message.chat.id
    cursor.execute(f'SELECT activate FROM users WHERE tg_id={people_id}') 
    data=cursor.fetchone()
    cursor.execute(f'SELECT block FROM users WHERE tg_id={people_id}') 
    bb=cursor.fetchone()
    global emoji
    global dostup
    if (data is None or data[0]==0):
        info=[message.chat.id, 0, 3, 0, 0]
        if data is None:
            cursor.execute('INSERT INTO users(tg_id, activate, try, block, support) VALUES (?, ?, ?, ?, ?);', info)
            connect.commit()
            cu(message) 
        else:
            if bb[0]==1:
                bot.send_message(message.chat.id, '–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã')
            else:
                cu(message)
    else:
        if bb[0]==1:
            bot.send_message(message.chat.id, '–í—ã –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã')
        else:
            me(message)

@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    if call.message:
        if call.data == "cpt1":
            ms = call.message.chat.id
            
            check = captcha_list[0:1]
            check = check[0]
            if emoji == check:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("UPDATE users SET activate = (?) WHERE tg_id = (?)",(1,call.message.chat.id,))
                connect.commit()
                message=call.message
                me(message)
                completecaptcga.append(call.message.chat.id)

            else: 
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("SELECT try FROM users WHERE tg_id=(?)",(call.message.chat.id,))
                
                tr=cursor.fetchall()[0][0]
                if tr==3:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 2 –ø–æ–ø—ã—Ç–∫–∏')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                elif tr==2:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 1 –ø–æ–ø—ã—Ç–∫–∞')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                else:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É 3 —Ä–∞–∑–∞, –∑–∞ —á—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É!')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    cursor.execute(f"UPDATE users SET block=? WHERE tg_id=(?)",(1, call.message.chat.id))
                connect.commit()

        if call.data == "cpt2":
            ms = call.message.chat.id
            
            check = captcha_list[1:2]
            check = check[0]
            if emoji == check:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("UPDATE users SET activate = (?) WHERE tg_id = (?)",(1,call.message.chat.id,))
                connect.commit()
                message=call.message
                me(message)
                completecaptcga.append(call.message.chat.id)
            if emoji != check:
                
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("SELECT try FROM users WHERE tg_id=(?)",(call.message.chat.id,))
                tr=cursor.fetchall()[0][0]
                if tr==3:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 2 –ø–æ–ø—ã—Ç–∫–∏')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                elif tr==2:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 1 –ø–æ–ø—ã—Ç–∫–∞')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                else:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É 3 —Ä–∞–∑–∞, –∑–∞ —á—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É!')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    cursor.execute(f"UPDATE users SET block=? WHERE tg_id=(?)",(1, call.message.chat.id))
                connect.commit()
        if call.data == "cpt3":
            ms = call.message.chat.id
            
            check = captcha_list[2:3]
            check = check[0]
            if emoji == check:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("UPDATE users SET activate = (?) WHERE tg_id = (?)",(1,call.message.chat.id,))
                connect.commit()
                message=call.message
                me(message)
                completecaptcga.append(call.message.chat.id)
            if emoji != check:
                
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("SELECT try FROM users WHERE tg_id=(?)",(call.message.chat.id,))
                tr=cursor.fetchall()[0][0]
                if tr==3:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 2 –ø–æ–ø—ã—Ç–∫–∏')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                elif tr==2:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 1 –ø–æ–ø—ã—Ç–∫–∞')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                else:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É 3 —Ä–∞–∑–∞, –∑–∞ —á—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É!')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    cursor.execute(f"UPDATE users SET block=? WHERE tg_id=(?)",(1, call.message.chat.id))
                connect.commit()
        if call.data == "cpt4":
            ms = call.message.chat.id
            
            check = captcha_list[3:4]
            check = check[0]
            if emoji == check:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("UPDATE users SET activate = (?) WHERE tg_id = (?)",(1,call.message.chat.id,))
                connect.commit()
                message=call.message
                me(message)
                completecaptcga.append(call.message.chat.id)
            if emoji != check:
                
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("SELECT try FROM users WHERE tg_id=(?)",(call.message.chat.id,))
                tr=cursor.fetchall()[0][0]
                if tr==3:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 2 –ø–æ–ø—ã—Ç–∫–∏')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                elif tr==2:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 1 –ø–æ–ø—ã—Ç–∫–∞')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                else:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É 3 —Ä–∞–∑–∞, –∑–∞ —á—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É!')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    cursor.execute(f"UPDATE users SET block=? WHERE tg_id=(?)",(1, call.message.chat.id))
                connect.commit()
        if call.data == "cpt5":
            ms = call.message.chat.id
            
            check = captcha_list[4:5]
            check = check[0]
            if emoji == check:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("UPDATE users SET activate = (?) WHERE tg_id = (?)",(1,call.message.chat.id,))
                connect.commit()
                message=call.message
                me(message)
                completecaptcga.append(call.message.chat.id)
            if emoji != check:
                
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("SELECT try FROM users WHERE tg_id=(?)",(call.message.chat.id,))
                tr=cursor.fetchall()[0][0]
                if tr==3:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 2 –ø–æ–ø—ã—Ç–∫–∏')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                elif tr==2:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 1 –ø–æ–ø—ã—Ç–∫–∞')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                else:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É 3 —Ä–∞–∑–∞, –∑–∞ —á—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É!')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    cursor.execute(f"UPDATE users SET block=? WHERE tg_id=(?)",(1, call.message.chat.id))
                connect.commit()
        if call.data == "cpt6":
            ms = call.message.chat.id
        
            check = captcha_list[5:6]
            check = check[0]
            if emoji == check:
                bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text=' –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–π–¥–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!')
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("UPDATE users SET activate = (?) WHERE tg_id = (?)",(1,call.message.chat.id,))
                connect.commit()
                message=call.message
                me(message)
                completecaptcga.append(call.message.chat.id)
            if emoji != check:
                
                connect  = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("SELECT try FROM users WHERE tg_id=(?)",(call.message.chat.id,))
                tr=cursor.fetchall()[0][0]
                if tr==3:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 2 –ø–æ–ø—ã—Ç–∫–∏')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                elif tr==2:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É. –£ –≤–∞—Å –æ—Å—Ç–∞–ª–æ—Å—å 1 –ø–æ–ø—ã—Ç–∫–∞')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    message=call.message
                    cu(message)
                else:
                    bot.send_message(call.message.chat.id,f'–í—ã –Ω–µ–≤–µ—Ä–Ω–æ —Ä–µ—à–∏–ª–∏ –∫–∞–ø—á—É 3 —Ä–∞–∑–∞, –∑–∞ —á—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫—É!')
                    cursor.execute(f"UPDATE users SET try=? WHERE tg_id=(?)",(tr-1, call.message.chat.id))
                    cursor.execute(f"UPDATE users SET block=? WHERE tg_id=(?)",(1, call.message.chat.id))
                connect.commit()
                
def cu(message):
    ms = message
    # –≠—Ç–æ –≤–Ω—É—Ç—Ä–µ–Ω—è—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–æ–¥–µ—Ä–∂–∏—Ç –≤ —Å–µ–±–µ —Å–∏–º–≤–æ–ª—ã, –Ω–∞ –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞–∂–∏–º–∞–µ—Ç —á–µ–ª–æ–≤–µ–∫.
    keyboard = types.InlineKeyboardMarkup()
    cpt1 = types.InlineKeyboardButton(text=cp1, callback_data="cpt1")
    cpt2 = types.InlineKeyboardButton(text=cp2, callback_data="cpt2")
    cpt3 = types.InlineKeyboardButton(text=cp3, callback_data="cpt3")
    keyboard.add(cpt1, cpt2, cpt3)
    cpt1 = types.InlineKeyboardButton(text=cp4, callback_data="cpt4")
    cpt2 = types.InlineKeyboardButton(text=cp5, callback_data="cpt5")
    cpt3 = types.InlineKeyboardButton(text=cp6, callback_data="cpt6")
    keyboard.add(cpt1, cpt2, cpt3)
    markdown = """
    *bold text*
    _italic text_
    [text](URL)
    """
    global emoji
    emoji = random.choice(captcha_list)
    global dostup
    dostup = 0
    # —Å–∞–º–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞–ø—á–µ–π.
    bot.send_message(message.chat.id, ' –ß—Ç–æ–±—ã –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º, –≤—ã–±–µ—Ä–∏—Ç–µ –Ω–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ ' + '*' + emoji + '*', parse_mode="Markdown", reply_markup=keyboard)


def me(message):
    try:
        connect = sqlite3.connect('users.db')
        cursor = connect.cursor()
        cursor.execute(f'SELECT support FROM users WHERE tg_id={message.chat.id}')
        connect.commit()

        if message.chat.id != admin:
            if message.text == '‚å®Ô∏è –û–±—Ä–∞—â–µ–Ω–∏–µ':
                if cursor.fetchall()[0][0] == 0:
                    klava = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                    for i in category:
                        klava.add(i)
                    bot.send_message(message.chat.id, f'–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—Ä–∞—â–µ–Ω–∏—è –≤—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:', reply_markup=klava)
                else:
                    bot.send_sticker(message.chat.id, 'CAACAgQAAxkBAAEK0aBlYpe4pzREnPYyJeWqEohENxcuzAACCBYAAqbxcR6k_-nxPI03gTME')
                    bot.send_message(message.chat.id, '–í—ã —É–∂–µ –ø–æ–¥–∞–ª–∏ –∑–∞–ø—Ä–æ—Å, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –Ω–µ–≥–æ')
            elif message.text == category[0] or message.text == category[1] or message.text == category[2] or message.text == category[3]:
                if cursor.fetchall()[0][0] == 0:
                    global act_category
                    act_category = message.text
                    klava = types.ReplyKeyboardRemove()
                    answer = bot.send_message(message.chat.id, 'üìî –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –æ–±—Ä–∞—â–µ–Ω–∏—è:\n\n–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ! –ü–æ—Å—Ç–∞—Ä–∞–π—Ç–µ—Å—å —É–º–µ—Å—Ç–∏—Ç—å –≤—Å—é —Å—É—Ç—å.\n\n–ï—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø—Ä–∏–∫—Ä–µ–ø–∏—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç, —Ç–æ –∑–∞–≥—Ä—É–∑–∏—Ç–µ –Ω–∞ imgur.com, –±–æ—Ç –Ω–µ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–µ–¥–∏–∞.', reply_markup=klava)
                    bot.register_next_step_handler(answer, answer_f)
                else:
                    bot.send_message(message.chat.id, '–í—ã —É–∂–µ –ø–æ–¥–∞–ª–∏ –∑–∞–ø—Ä–æ—Å, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –Ω–µ–≥–æ')
            else:
                klava = types.ReplyKeyboardMarkup(resize_keyboard=True)
                button1 = '‚å®Ô∏è –û–±—Ä–∞—â–µ–Ω–∏–µ'
                klava.add(button1)
                bot.send_sticker(message.chat.id, 'CAACAgQAAxkBAAEK0Z5lYpdo9QokCzd2sct_dbVPE5KNgwACDA8AAqbxcR4C181RIl_-BDME')
                bot.send_message(message.chat.id, '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ï—Å–ª–∏ –≤—ã —Ö–æ—Ç–∏—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å–æ —Å–ª—É–∂–±–æ–π –ø–æ–¥–¥–µ—Ä–∂–∫–∏ InsightEye, –≤—ã –º–æ–∂–µ—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å –æ–±—Ä–∞—â–µ–Ω–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ –Ω–∏–∂–µ.', reply_markup=klava)
        else:
            global act_id
            if message.text == 'üì≠ –û–±—Ä–∞—â–µ–Ω–∏—è':
                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute(f'SELECT COUNT (id) FROM users')
                connect.commit()
                max_count = cursor.fetchall()[0][0]
                i = 1
                for i in range(max_count):
                    connect = sqlite3.connect('users.db')
                    cursor = connect.cursor()
                    cursor.execute(f'SELECT support FROM users WHERE id={i + 1}')
                    connect.commit()
                    a = cursor.fetchall()[0][0]
                    if a == 1:
                        connect = sqlite3.connect('users.db')
                        cursor = connect.cursor()
                        cursor.execute(f'SELECT supportText FROM users WHERE id={i + 1}')
                        connect.commit()
                        mes = cursor.fetchall()[0][0]
                        connect = sqlite3.connect('users.db')
                        cursor = connect.cursor()
                        cursor.execute(f'SELECT tg_id FROM users WHERE id={i + 1}')
                        connect.commit()
                        act_id = cursor.fetchall()[0][0]
                        klava = types.ReplyKeyboardMarkup(resize_keyboard=True)
                        button1 = '‚úÖ –û—Ç–≤–µ—Ç–∏—Ç—å'
                        button2 = '‚ùå –ó–∞–±–∞–Ω–∏—Ç—å'
                        klava.add(button1, button2)
                        bot.send_message(message.chat.id, mes, reply_markup=klava, parse_mode='Markdown')
                        break
                    if i + 1 == max_count:
                        bot.send_message(message.chat.id, '–ë–æ–ª—å—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–π –Ω–µ—Ç')
                        message.text = 'asdaAERGAERGsadfoagpoj'
                        me(message)
            elif message.text == 'ü´∂ –†–∞–∑–±–∞–Ω':
                klava = types.ReplyKeyboardRemove()
                unban = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ id —á–µ–ª–æ–≤–µ–∫–∞ –¥–ª—è —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∫–∏:')
                bot.register_next_step_handler(unban, unban_f)
            elif message.text == '‚å®Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ':
                klava = types.ReplyKeyboardRemove()
                mess = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ id –ø–æ–ª—É—á–µ—Ç–µ–ª—è —Å–æ–æ–±—â–µ–Ω–∏—è:')
                bot.register_next_step_handler(mess, mess_f)
            elif message.text == '‚ùå –ó–∞–±–∞–Ω–∏—Ç—å':
                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute(f"UPDATE users SET block=? WHERE tg_id=(?)", (1, act_id))
                connect.commit()
                bot.send_message(message.chat.id, f'{act_id} –±—ã–ª –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω!')
                try:
                    bot.send_message(act_id, '–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–ª –≤–∞—Å!')
                except telebot.apihelper.ApiTelegramException as e:
                    if e.result_json['description'] == "Forbidden: bot was blocked by the user":
                        print(f"User {act_id} has blocked the bot.")
                    else:
                        print(f"Error sending message: {e}")
                message.text = 'asdASFGAWEFasdfiawefDF'
                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute("UPDATE users SET support = (?) WHERE tg_id = (?)", (0, act_id,))
                connect.commit()
                me(message)
            elif message.text == '‚úÖ –û—Ç–≤–µ—Ç–∏—Ç—å':
                klava = types.ReplyKeyboardRemove()
                answer_for_s = bot.send_message(message.chat.id, f'–í–≤–µ–¥–∏—Ç–µ –æ—Ç–≤–µ—Ç –¥–ª—è {act_id}:', reply_markup=klava)
                bot.register_next_step_handler(answer_for_s, answer_for_s_f)
            elif message.text == '‚úçÔ∏è –†–∞—Å—Å—ã–ª–∫–∞':
                connect = sqlite3.connect('users.db')
                cursor = connect.cursor()
                cursor.execute(f'SELECT COUNT (id) FROM users')
                connect.commit()
                klava = types.ReplyKeyboardMarkup(resize_keyboard=True)
                button1 = '‚òëÔ∏è –°–æ–∑–¥–∞–µ–º'
                button2 = '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è'
                klava.add(button1, button2)
                bot.send_message(message.chat.id, f'–í –≤–∞—à–µ–º –±–æ—Ç–µ `{cursor.fetchall()[0][0]}` –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –•–æ—Ç–∏—Ç–µ —Å–æ–∑–¥–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É?', parse_mode='Markdown', reply_markup=klava)
            elif message.text == '‚òëÔ∏è –°–æ–∑–¥–∞–µ–º' and message.chat.id == admin:
                klava = types.ReplyKeyboardRemove()
                ads = bot.send_message(message.chat.id, '‚úèÔ∏è –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç —Å–≤–æ–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏. –ï—Å–ª–∏ —Ö–æ—á–µ—à—å, —á—Ç–æ–±—ã —É —Ä–∞—Å—Å—ã–ª–∫–∏ –±—ã–ª–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è - –æ—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é, –¥–æ–±–∞–≤–∏–≤ –∫ –Ω–µ–π —Ç–µ–∫—Å—Ç (–æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º)', reply_markup=klava)
                bot.register_next_step_handler(ads, ads_f)
            elif message.text == '‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è':
                message.text = 'asdasdweafarfg'
                me(message)
            elif message.text == '‚úÖ –°–æ–∑–¥–∞–µ–º':
                message.text = 'asdasdweafarfg'
                ads_yf(message)
            else:
                klava = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
                button1 = 'üì≠ –û–±—Ä–∞—â–µ–Ω–∏—è'
                button2 = '‚å®Ô∏è –°–æ–æ–±—â–µ–Ω–∏–µ'
                button3 = 'ü´∂ –†–∞–∑–±–∞–Ω'
                button4 = '‚úçÔ∏è –†–∞—Å—Å—ã–ª–∫–∞'
                klava.add(button1, button2, button3, button4)
                bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEKxbFlV-GGO6htHe4Hi75YS3kFfIF8fAACvRwAArck-UlFx0Lq0J6bKDME')
                bot.send_message(message.chat.id, '–ú–µ–Ω—é –∞–¥–º–∏–Ω–∞:', reply_markup=klava)

    except telebot.apihelper.ApiTelegramException as e:
        if e.result_json['description'] == "Forbidden: bot was blocked by the user":
            print(f"User {message.chat.id} has blocked the bot.")
        else:
            print(f"Error in the 'me' function: {e}")


def ads_f(message):
    global photo_status
    global photo_id
    global description
    if message.content_type=='photo':
        bot.send_photo(message.chat.id, message.photo[0].file_id, message.caption)
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1='‚úÖ –°–æ–∑–¥–∞–µ–º'
        button2='‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è'
        klava.add(button1,button2)
        photo_status=1
        description=message.caption
        photo_id=message.photo[0].file_id
        ads_y=bot.send_message(message.chat.id,'–í–æ—Ç —Ç–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∞. –ü—Ä–æ–≤–µ—Ä—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å—Ç–∞—Ä—Ç —Ä–µ–∫–ª–∞–º—ã', reply_markup=klava)
        bot.register_next_step_handler(ads_y,ads_yf)
    else:
        bot.send_message(message.chat.id, message.text)
        klava=types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1='‚úÖ –°–æ–∑–¥–∞–µ–º'
        button2='‚¨ÖÔ∏è –í–µ—Ä–Ω—É—Ç—å—Å—è'
        klava.add(button1,button2)
        photo_status=0
        description=message.text
        ads_y=bot.send_message(message.chat.id,'–í–æ—Ç —Ç–∞–∫ –±—É–¥–µ—Ç –≤—ã–≥–ª—è–¥–µ—Ç—å —Ä–∞—Å—Å—ã–ª–∫–∞. –ü—Ä–æ–≤–µ—Ä—å –∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å—Ç–∞—Ä—Ç —Ä–µ–∫–ª–∞–º—ã', reply_markup=klava)
        

def ads_yf(message):
    global photo_status
    global photo_id
    global description

    connect  = sqlite3.connect('users.db')
    cursor = connect.cursor()
    cursor.execute(f'SELECT id FROM users ORDER BY id DESC LIMIT 1')
    connect.commit()
    i=1
    i2=int((cursor.fetchall())[0][0])
    try_false=0
    try_true=0
    for i in range(i2+1):
        connect  = sqlite3.connect('users.db')
        cursor = connect.cursor()
        cursor.execute(f'SELECT tg_id FROM users WHERE id = ?', (i,))
        connect.commit()
        if photo_status==1:
            try_true=try_true+1
            try:
                bot.send_photo(cursor.fetchall()[0][0],photo_id,description)
            except Exception as error:
                try_false=try_false+1

        else:
            try_true=try_true+1
            try:
                bot.send_message(cursor.fetchall()[0][0],description)
            except Exception as error:
                try_false=try_false+1
    
    text=f'üì≠ –†–∞—Å—Å—ã–ª–∫–∞ –±—ã–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ `{try_true-1}` –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º!\n‚úÖ –£—Å–ø–µ—à–Ω–æ –¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ: `{try_true-try_false}`\n‚ùå –ù–µ –¥–æ—à–ª–æ: `{try_false-1}`'
    bot.send_message(message.chat.id, text, parse_mode='Markdown')
    me(message)

def unban_f(message):
    if (message.text).isdigit():
        connect = sqlite3.connect('users.db')
        cursor= connect.cursor()
        people_id=message.chat.id
        cursor.execute(f'SELECT block FROM users WHERE tg_id={message.text}') 
        data=cursor.fetchone()
        connect.commit()
        print(data)
        if data is None:
            bot.send_message(message.chat.id,'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å  –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–¥')
        elif data[0]==0:
            bot.send_message(message.chat.id, '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –±–∞–Ω–µ')
            me(message)
        else:
            connect  = sqlite3.connect('users.db')
            cursor = connect.cursor()
            cursor.execute(f"UPDATE users SET block=? WHERE tg_id=(?)",(0, message.text))
            connect.commit()
            bot.send_message(message.chat.id, 'üíÄ –Æ–∑–µ—Ä –±—ã–ª —Ä–∞–∑–±–∞–Ω–µ–Ω!')
            bot.send_message(message.text,'–í—ã –±—ã–ª–∏ —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω—ã!')
            me(message)
    else:
        bot.send_message(message.chat.id,'–ê–π–¥–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º')
        me(message)

def mess2_f(message):
    global act_id
    bot.send_message(act_id, message.text)
    bot.send_message(message.chat.id,'–°–æ–æ–±—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ')
    me(message)
def mess_f(message):
    if (message.text).isdigit():
        connect = sqlite3.connect('users.db')
        cursor= connect.cursor()
        people_id=message.chat.id
        cursor.execute(f'SELECT block FROM users WHERE tg_id={message.text}') 
        data=cursor.fetchone()
        connect.commit()
        print(data)
        if data is None:
            bot.send_message(message.chat.id,'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å  –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–¥')
            me(message)
        else:
            global act_id
            act_id=message.text
            mess=bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —é–∑–µ—Ä–∞:')
            bot.register_next_step_handler(mess,mess2_f)
    else:
        bot.send_message(message.chat.id,'–ê–π–¥–∏ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —á–∏—Å–ª–æ–º')
        me(message)
        
def answer_for_s_f(message):
    global act_id
    bot.send_message(act_id,'–í—ã –ø–æ–ª—É—á–∏–ª–∏ –æ—Ç–≤–µ—Ç –Ω–∞ —Å–≤–æ–π –∑–∞–ø—Ä–æ—Å:\n\n'+message.text)
    bot.send_message(message.chat.id,'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å  –ø–æ–ª—É—á–∏–ª –æ—Ç–≤–µ—Ç!')
    connect  = sqlite3.connect('users.db')
    cursor = connect.cursor()
    cursor.execute("UPDATE users SET support = (?) WHERE tg_id = (?)",(0,act_id,))
    connect.commit()
    me(message)

def answer_f(message):
    global act_category

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –º–µ–¥–∏–∞-—Ñ–∞–π–ª
    if message.photo or message.document or message.audio or message.video or message.voice or message.sticker:
        bot.send_message(message.chat.id, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –Ω–∞ imgur.com –∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å—Å—ã–ª–∫—É.')
        klava = types.ReplyKeyboardMarkup(resize_keyboard=True)
        button1 = '‚å®Ô∏è –û–±—Ä–∞—â–µ–Ω–∏–µ'
        klava.add(button1)
        bot.send_sticker(message.chat.id, 'CAACAgIAAxkBAAEKKntk7nn9Thz0XzQCqB2pArbAWmRKuwACeicAAn7IuUpa8TCgjo3IOzAE')
        bot.send_message(message.chat.id, '–ú–µ–Ω—é —é–∑–µ—Ä–∞:', reply_markup=klava)
    else:
        connect = sqlite3.connect('users.db')
        cursor = connect.cursor()
        cursor.execute("UPDATE users SET support = (?) WHERE tg_id = (?)", (1, message.chat.id,))
        text = f'–¢–µ–º–∞: {act_category}\n–û–±—Ä–∞—â–µ–Ω–∏–µ: {message.text}\nId –Æ–∑–µ—Ä–∞: `{message.chat.id}`\n–Æ–∑–µ—Ä–Ω–µ–π–º: @{message.from_user.username}'
        cursor.execute("UPDATE users SET supportText = (?) WHERE tg_id = (?)", (text, message.chat.id,))
        connect.commit()
        bot.send_message(message.chat.id, '–û–±—Ä–∞—â–µ–Ω–∏–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, –æ–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞!')
        bot.send_message(admin, '–í—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å!')
        me(message)

bot.polling()